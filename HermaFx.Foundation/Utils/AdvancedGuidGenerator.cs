using System;

namespace HermaFx.Utils
{
	public static class AdvancedGuidGenerator
	{
		private static readonly DateTime UnixStartTime = new DateTime(1900, 1, 1, 0, 0, 0, DateTimeKind.Utc);

		// note: Guids generated by CombGuidGenerator are only considered ascending by SQL Server which compares Guids in an unusual way
		// to generate Guids considered ascending by MongoDB use the AscendingGuidGenerator

		

		public static Guid GenerateComb()
		{
			return GenerateComb(Guid.NewGuid(), DateTime.UtcNow);
		}

		// See: http://www.informit.com/articles/article.aspx?p=25862&seqNum=7
		public static Guid GenerateComb(Guid id, DateTime timestamp)
		{
			var result = id.ToByteArray();
			var span = new TimeSpan(timestamp.Ticks - UnixStartTime.Ticks);
			var timeOfDay = timestamp.TimeOfDay;

#if false
			byte[] days = BitConverter.GetBytes(span.Days);
			byte[] time = BitConverter.GetBytes((long)(timeOfDay.TotalMilliseconds / 3.333333));

			Array.Reverse(bytes);
			Array.Reverse(array);

			Array.Copy(bytes, (int)bytes.Length - 2, result, (int)result.Length - 6, 2);
			Array.Copy(array, (int)array.Length - 4, result, (int)result.Length - 4, 4);
#else
			var days = BitConverter.GetBytes(span.Days);
			var time = BitConverter.GetBytes((int)(timestamp.TimeOfDay.Ticks * 300 / TimeSpan.TicksPerSecond));  // convert from .NET resolution to SQL Server resolution

			Array.Copy(days, 0, result, 10, 2);
			Array.Copy(time, 0, result, 12, 4);

			if (BitConverter.IsLittleEndian)
			{
				Array.Reverse(result, 10, 2);
				Array.Reverse(result, 12, 4);
			}
#endif
			return new Guid(result);
		}
	}
}